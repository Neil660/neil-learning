spring.application.name=SPRING-BOOT-MYBATIS-NEIL
server.port=9911
server.servlet.context-path=/
#### 注册到Eureka的注册中心 start
eureka.client.register-with-eureka=true
# 获取注册实例列表
eureka.client.fetch-registry=true
# #配置注册中心地址
eureka.client.service-url.defaultZone=http://localhost:15400/eureka/
#### end

#### druid-----多数据源、数据连接池 start
# 配置MYSQL数据源
spring.datasource.druid.mysql.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.mysql.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.mysql.url=${mysql.datasource.url}
spring.datasource.druid.mysql.username=${mysql.datasource.username}
spring.datasource.druid.mysql.password=${mysql.datasource.password}
# 配置ORACLE数据源
spring.datasource.druid.oracle.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.oracle.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.druid.oracle.url=${oracle.datasource.url}
spring.datasource.druid.oracle.username=${oracle.datasource.username}
spring.datasource.druid.oracle.password=${oracle.datasource.password}

# 初始化连接池的连接数量 大小，最小，最大
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=20
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=30000
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=true
spring.datasource.druid.test-on-return=false
# 是否缓存preparedStatement，也就是PSCache  官方建议MySQL下建议关闭   个人建议如果想用SQL防火墙 建议打开
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
# spring.datasource.useGlobalDataSourceStat=true
# 数据库连接的自动回收机制
# 如果连接泄露，是否需要回收泄露的连接
spring.datasource.druid.remove-abandoned=true
# 连接回收的超时时间
spring.datasource.druid.remove-abandoned-timeout=1800
# 如果回收了泄露的连接，是否要打印一条log
spring.datasource.druid.log-abandoned=true

## druid监控配置 TODO 监控界面还无法监控到数据
# 配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入
spring.datasource.druid.filters=wall,stat,log4j
spring.datasource.druid.stat-view-servlet.enabled=true
# 访问地址规则，localhost:port/druid/
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
# 是否允许清空统计数据
spring.datasource.druid.stat-view-servlet.reset-enable=true
# 监控界面的登录账号密码
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=11
#### end


#### mybatis start
# model所在位置
mybatis.type-aliases-package=com.neil.spring.boot.mybatis.model
# 映射文件位置；通过自动配置映射
# mybatis.mapper-locations=classpath:mappers/*Mapper.xml
# 日志设置，打印SQL
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
# 开启全局的二级缓存
# mybatis.configuration.cache-enabled=true
# Executor执行器类型，默认simple，还有reuse、batch
mybatis.configuration.default-executor-type=simple
#### end