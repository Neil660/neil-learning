spring.application.name=SPRING-BOOT-MYBATIS
server.port=9911
server.servlet.context-path=/
#### 注册到Eureka的注册中心 start
eureka.client.register-with-eureka=true
# 获取注册实例列表
eureka.client.fetch-registry=true
# #配置注册中心地址
eureka.client.service-url.defaultZone=http://localhost:15400/eureka/
#### end

#### druid(https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter)-----多数据源、数据连接池 start
### 【第一个数据源――配置MYSQL数据源】
## 【JDBC 配置】
spring.datasource.druid.one.dbtype=mysql
spring.datasource.druid.one.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.one.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.one.url=${mysql.datasource.url}
spring.datasource.druid.one.username=${mysql.datasource.username}
spring.datasource.druid.one.password=${mysql.datasource.password}
## 【连接池配置】
# 初始化连接池的连接数量 大小，最小，最大
spring.datasource.druid.one.initial-size=5
spring.datasource.druid.one.min-idle=5
spring.datasource.druid.one.max-active=20
# 配置获取连接等待超时的时间
spring.datasource.druid.one.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.one.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.one.min-evictable-idle-time-millis=30000
spring.datasource.druid.one.validation-query=SELECT 1 FROM DUAL
spring.datasource.druid.one.test-while-idle=true
spring.datasource.druid.one.test-on-borrow=true
spring.datasource.druid.one.test-on-return=false
# 是否缓存preparedStatement，也就是PSCache  官方建议MySQL下建议关闭
spring.datasource.druid.one.pool-prepared-statements=false
spring.datasource.druid.one.max-pool-prepared-statement-per-connection-size=20
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.one.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 如果连接泄露，是否需要回收泄露的连接
spring.datasource.druid.one.remove-abandoned=true
# 连接回收的超时时间
spring.datasource.druid.one.remove-abandoned-timeout=1800
# 如果回收了泄露的连接，是否要打印一条log
spring.datasource.druid.one.log-abandoned=true


### 【第二个数据源――配置ORACLE数据源】
## 【JDBC 配置】
spring.datasource.druid.two.dbtype=oracle
spring.datasource.druid.two.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.two.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.druid.two.url=${oracle.datasource.url}
spring.datasource.druid.two.username=${oracle.datasource.username}
spring.datasource.druid.two.password=${oracle.datasource.password}
## 【连接池配置】
spring.datasource.druid.two.initial-size=5
spring.datasource.druid.two.min-idle=5
spring.datasource.druid.two.max-active=20
spring.datasource.druid.two.max-wait=60000
spring.datasource.druid.two.time-between-eviction-runs-millis=60000
spring.datasource.druid.two.min-evictable-idle-time-millis=30000
spring.datasource.druid.two.validation-query=SELECT 1 FROM DUAL
spring.datasource.druid.two.test-while-idle=true
spring.datasource.druid.two.test-on-borrow=true
spring.datasource.druid.two.test-on-return=false
spring.datasource.druid.two.pool-prepared-statements=true
spring.datasource.druid.two.max-pool-prepared-statement-per-connection-size=20
spring.datasource.druid.two.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
spring.datasource.druid.two.remove-abandoned=true
spring.datasource.druid.two.remove-abandoned-timeout=1800
spring.datasource.druid.two.log-abandoned=true


### 【监控配置】可以给多个数据源一起用
## 配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入。以下是默认配置，如果要自己实现则使用下面的【配置StatFilter】、【配置WallFilter】
# spring.datasource.druid.filters=wall,stat,log4j
# 【配置StatFilter】
spring.datasource.druid.filter.stat.enabled=true
spring.datasource.druid.filter.stat.db-type=h2
## 是否开启慢SQL记录，slow-sql-millis单位是毫秒
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=2000
# 【配置WallFilter】
#spring.datasource.druid.filter.wall.enabled=true
#spring.datasource.druid.filter.wall.db-type=h2
#spring.datasource.druid.filter.wall.config.delete-allow=false
#spring.datasource.druid.filter.wall.config.drop-table-allow=false

## 【WebStatFilter配置】(https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_%E9%85%8D%E7%BD%AEWebStatFilter)
# 是否启用WebStatFilter（用于采集web-jdbc关联监控的数据）。登录管理界面查看菜单：Web应用、URL监控、Session监控
spring.datasource.druid.web-stat-filter.enabled=true
# 管理界面访问地址：localhost:9911/druid/index.xml
spring.datasource.druid.web-stat-filter.url-pattern=/druid/*
# 排除不必要的URL
spring.datasource.druid.web-stat-filter.exclusions=
spring.datasource.druid.web-stat-filter.session-stat-enable=true
spring.datasource.druid.web-stat-filter.session-stat-max-count=1000
# 该配置使得druid能够知道当前的session的用户是谁
#spring.datasource.druid.web-stat-filter.principal-session-name=NEIL.user
# 如果你的user信息保存在cookie中，该配置使得druid能够知道当前的cookie的用户是谁
#spring.datasource.druid.web-stat-filter.principal-cookie-name=NEIL.user
# 监控单个url调用的sql列表
spring.datasource.druid.web-stat-filter.profile-enable=true
## 【StatViewServlet配置】(https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_StatViewServlet%E9%85%8D%E7%BD%AE)
# 是否启用StatViewServlet（提供监控信息展示的html页面、提供监控信息的JSON API），使用监控功能需要【配置StatFilter】。登录管理界面查看菜单：SQL监控
spring.datasource.druid.stat-view-servlet.enabled=true
# 管理界面访问地址：localhost:9911/druid/index.xml
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
# 是否允许清零所有计数器，重新技术
spring.datasource.druid.stat-view-servlet.reset-enable=false
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=11
# deny是黑名单，allow是白名单（不配置代表都可以访问）
spring.datasource.druid.stat-view-servlet.deny=
spring.datasource.druid.stat-view-servlet.allow=
## 【Spring监控配置】(https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_Druid%E5%92%8CSpring%E5%85%B3%E8%81%94%E7%9B%91%E6%8E%A7%E9%85%8D%E7%BD%AE)
# Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔。登录管理界面查看菜单：Srping监控
spring.datasource.druid.aop-patterns=com.neil.mybatis.config.*,com.neil.mybatis.controller.*,com.neil.mybatis.service.impl.*
#### end


#### mybatis start
# model所在位置
mybatis.type-aliases-package=com.neil.mybatis.model
# 映射文件位置；通过自动配置映射
# mybatis.mapper-locations=classpath:mappers/*Mapper.xml
# 日志设置，打印SQL
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
# 开启全局的二级缓存
# mybatis.configuration.cache-enabled=true
# Executor执行器类型，默认simple，还有reuse、batch
mybatis.configuration.default-executor-type=simple
#### end